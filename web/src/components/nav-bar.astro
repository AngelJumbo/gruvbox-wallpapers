---
import { getCategories } from "@services/get-categories";
import { ALL_CATEGORIES } from "@lib/constants";
import { handleCategoryActive } from "@lib/utils/handle-category-active";

const { category = ALL_CATEGORIES } = Astro.params;
const categories = await getCategories();

const allCategoryStyles = handleCategoryActive(category, ALL_CATEGORIES);
---

<header
  class="h-16 bg-[#eadbad] flex items-center justify-center md:justify-between px-2 sticky top-0 left-0 z-50"
>
  <a href="/">
    <h1 class="text-[#282828] font-bold text-2xl">Gruvbox Wallpapers</h1>
  </a>

  <input type="checkbox" id="checkbox-btn" class="md:hidden" />
  <label
    for="checkbox-btn"
    id="hamburguer"
    class="size-16 fixed bottom-2 right-2 border-2 border-[#695c51] rounded-full z-20 flex items-center justify-center md:hidden duration-300"
  >
    <svg
      class="stroke-[#eadbad]"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      stroke-width="2"
      stroke="currentColor"
      fill="none"
      stroke-linecap="round"
      stroke-linejoin="round"
      ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
        d="M4 6l16 0"></path><path d="M4 12l16 0"></path><path d="M4 18l16 0"
      ></path></svg
    >
  </label>

  <ul
    id="nav-bar-mobile"
    class="duration-300 fixed top-0 left-0 w-[70%] text-[#282828] h-dvh bg-[#eadbadef] flex flex-col items-center justify-center gap-4 z-10 md:hidden"
  >
    <li>
      <a
        id="link"
        href="/"
        class={`capitalize py-2 px-3 rounded-md ${allCategoryStyles} relative z-10 duration-300`}
      >
        {ALL_CATEGORIES}
      </a>
    </li>
    {
      categories?.map((name) => {
        const styles = handleCategoryActive(category, name);

        return (
          <li>
            <a
              id="link"
              href={`/wallpapers/${name}`}
              class={`capitalize py-2 px-3 rounded-md ${styles} hover:bg-[#282828] hover:text-[#eadbad] relative z-10 duration-300`}
            >
              {name}
            </a>
          </li>
        );
      })
    }
  </ul>

  <ul class="gap-1 text-[#282828] capitalize hidden md:flex" id="nav-bar">
    <!-- Effect -->
    <span
      id="effect"
      class="absolute rounded-md bg-[#282828] w-[var(--width)] h-[var(--height)] top-[var(--top)] left-[var(--left)] duration-300 ease-in-out -z- opacity-[var(--opacity)] scale-[var(--scale)]"
    ></span>
    <!-- Effect -->

    {
      (
        <li>
          <a
            id="link"
            href="/"
            class={`py-2 px-3 rounded-md ${allCategoryStyles} relative z-10 duration-300`}
          >
            {ALL_CATEGORIES}
          </a>
        </li>
      )
    }
    {
      categories?.map((name) => {
        const styles = handleCategoryActive(category, name);

        return (
          <li>
            <a
              id="link"
              href={`/wallpapers/${name}`}
              class={`py-2 px-3 rounded-md ${styles} relative z-10 duration-300`}
            >
              {name}
            </a>
          </li>
        );
      })
    }
  </ul>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const $links = document.querySelectorAll("#link");
    const $effect = document.getElementById("effect");

    $links.forEach((item) => {
      item.addEventListener("mouseenter", (event) => {
        const { y, x, height, width } = item.getBoundingClientRect();

        $effect?.style.setProperty("--opacity", `1`);
        $effect?.style.setProperty("--scale", "1");

        $effect?.style.setProperty("--width", `${width}px`);
        $effect?.style.setProperty("--height", `${height}px`);
        $effect?.style.setProperty("--top", `${y}px`);
        $effect?.style.setProperty("--left", `${x}px`);
      });

      item.addEventListener("mouseleave", () => {
        $effect?.style.setProperty("--opacity", "0");
        $effect?.style.setProperty("--scale", "0.8");
      });
    });
  });
</script>

<style>
  #checkbox-btn {
    display: none;
  }

  #checkbox-btn:not(:checked) ~ #nav-bar-mobile {
    opacity: 0;
    transform: translateX(-100%);
  }

  #checkbox-btn:checked ~ label {
    transform: rotate(90deg);
  }
  #checkbox-btn:checked ~ #nav-bar-mobile {
    opacity: 1;
    transform: translateX(0);
  }
</style>
